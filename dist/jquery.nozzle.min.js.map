{"version":3,"sources":["jquery.nozzle.js"],"names":["$","nozzle","renderTimeoutFunction","liveFilter","options","this","defaults","data","deferRender","deferRenderDelay","filters","filterCallback","render","renderCallback","params","extend","forEach","fval","findex","farr","$el","is","on","e","filter","filteredData","filterData","id","setTimeout","filtered","filterDefaults","attribute","match","matchCase","value","filterArr","isArray","push","jQuery","val","toLowerCase","index","arr","testValArr","attr","indexOf","trim","split","attrName","attrIndex","attrArr","thisMatch","type","filterval","i","length","testval","expect","regex","RegExp","modifiers"],"mappings":"CASA,SAAAA,GAEAA,EAAAC,UACAD,EAAAC,OAAAC,sBAAA,KAMAF,EAAAC,OAAAE,WAAA,SAAAC,GAEA,GAAAD,GAAAE,KACAC,GACAC,KAAA,KACAC,aAAA,EACAC,iBAAA,IACAC,WACAC,eAAA,KACAC,QAAA,EACAC,eAAA,MAIAC,EAAAd,EAAAe,UAAAT,EAAAF,EAGAU,GAAAJ,QAAAM,QAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAH,EAAA,KACAG,GAAAC,GAAA,UACAD,EAAAE,GAAA,SAAA,SAAAC,GACApB,EAAAqB,WAGAJ,EAAAE,GAAA,QAAA,SAAAC,GACApB,EAAAqB,aAKArB,EAAAqB,OAAA,WACA,GAAAC,GAAAzB,EAAAC,OAAAyB,WACAZ,EAAAP,KACAO,EAAAJ,QAKA,IAHA,kBAAAI,GAAAH,gBACAG,EAAAH,eAAAc,GAEAX,EAAAF,QAAA,kBAAAE,GAAAD,eACA,GAAAC,EAAAN,YAAA,CACA,GAAAmB,GAAAC,WAAA,WACA5B,EAAAC,OAAAC,wBAAAyB,GACAb,EAAAD,eAAAY,IAEAX,EAAAL,iBACAT,GAAAC,OAAAC,sBAAAyB,MAEAb,GAAAD,eAAAY,KAWAzB,EAAAC,OAAAyB,WAAA,SAAAnB,EAAAG,GACA,GAAAmB,MACAC,GACAC,UAAA,KACAC,MAAA,WACAC,WAAA,EACAC,MAAA,MAGAC,IAiGA,OAhGAnC,GAAAoC,QAAA1B,GACAyB,EAAAzB,EAEAyB,EAAAE,KAAA3B,GAIAyB,EAAAnB,QAAA,SAAAQ,EAAAN,EAAAC,GACA,GAAAe,GAAAV,EAAA,KACAU,aAAAI,UACAJ,EAAAA,EAAAK,OAEAf,EAAA,YACAU,EAAAA,EAAAM,eAEAhB,EAAA,OAAAU,IAIA3B,EAAAS,QAAA,SAAAuB,EAAAE,EAAAC,GACA,GAAAV,IAAA,CAEAG,GAAAnB,QAAA,SAAAC,EAAAC,EAAAC,GAGA,GAGAwB,GAHAnB,EAAAxB,EAAAe,UAAAe,EAAAb,GAIA2B,EAAA3B,EAAA,SACA2B,GAAAC,QAAA,KAAA,GAEAD,EAAAA,EAAAE,OACAH,GAAAnB,EAAA,UAAAe,EAAAK,GAAAL,EAAAK,GAAAJ,iBAGAG,KACAC,EAAAG,MAAA,KAAA/B,QAAA,SAAAgC,EAAAC,EAAAC,GACAF,EAAAA,EAAAF,OACAH,EAAAN,KAAAb,EAAA,UAAAe,EAAAS,GAAAT,EAAAS,GAAAR,iBAIA,IAAAW,IAAA,EACAC,EAAA5B,EAAA,MACA6B,EAAA7B,EAAA,MAGA6B,aAAAf,UACAe,EAAAA,EAAAd,MAIA,KAAA,GAAAe,GAAA,EAAAA,EAAAX,EAAAY,OAAAD,IAAA,CACA,GAAAE,GAAAb,EAAAW,EAEA,IAAA,aAAAF,EACAD,EAAAK,EAAAX,QAAAQ,IAAA,MAEA,IAAA,eAAAD,EACAD,EAAA,IAAAK,EAAAX,QAAAQ,OAEA,IAAA,aAAAD,EAAA,CACA,GAAAK,GAAAD,EAAAD,OAAAF,EAAAE,MACAC,GAAAX,QAAAQ,KAAAI,IACAN,GAAA,OAGA,IAAA,UAAAC,EACAD,EAAA,IAAAE,EAAAE,QAAAC,IAAAH,MAEA,IAAA,UAAAD,EAAA,CACA,GAAAM,GAAA,GAAAC,QAAAN,GAGAO,EAAA,GACApC,GAAA,YACAoC,GAAA,KAGA,MAAAJ,EAAAxB,MAAA0B,KACAP,GAAA,IAKAnB,GAAAmB,IAIAnB,IACAH,EAAAQ,KAAAE,GACAA,EAAA,QAAAE,KAIAZ,IAGAS","file":"jquery.nozzle.min.js","sourcesContent":["/* \n * jquery.nozzle \n * Simple data filtering and manipulation library for jquery. \n * \n * Author: Marcin Jackowiak\n * Released under MIT License\n * \n */\n\n(function($) {\n    \n$.nozzle = {};\n$.nozzle.renderTimeoutFunction = null; \n\n/*\n * liveFilter\n * Apply a filter to the given dataset. Event listeners will be added automatically.\n */\n$.nozzle.liveFilter = function(options) {\n    \n    var liveFilter = this;        \n    var defaults = {        \n        data: null,\n        deferRender: true,\n        deferRenderDelay: 300,\n        filters: [],\n        filterCallback: null,\n        render: false,\n        renderCallback: null\n    }        \n    \n    // Apply default options\n    var params = $.extend({}, defaults, options);    \n        \n    // Register event listeners\n    params.filters.forEach(function(fval, findex, farr) {\n        var $el = fval['value'];\n        if($el.is('select')) {\n            $el.on('change', function(e) {\n                liveFilter.filter();\n            });\n        } else {\n            $el.on('keyup', function(e) {\n                liveFilter.filter();\n            });            \n        }\n    });\n    \n    liveFilter.filter = function() {\n        var filteredData = $.nozzle.filterData(\n            params.data,\n            params.filters\n        );\n        if(typeof params.filterCallback === 'function') {\n            params.filterCallback(filteredData);\n        }\n        if(params.render && typeof params.renderCallback === 'function') {\n            if(params.deferRender) {\n                var id = setTimeout(function() {\n                    if($.nozzle.renderTimeoutFunction === id) {\n                        params.renderCallback(filteredData);\n                    }\n                }, params.deferRenderDelay);            \n                $.nozzle.renderTimeoutFunction = id;\n            } else {\n                params.renderCallback(filteredData);\n            }\n        }\n    }\n    \n};\n\n/*\n * filterData\n * Filter the data using provided filter array\n */\n$.nozzle.filterData = function(data, filters) {\n    var filtered = [];\n    var filterDefaults = {\n        attribute: null, // can be a comma separated list\n        match: 'contains', // contains, startsWith, endsWith, regex, exact\n        matchCase: false,\n        value: null\n    }\n       \n    var filterArr = [];\n    if($.isArray(filters)) {\n        filterArr = filters;\n    } else {\n        filterArr.push(filters);\n    }                \n    \n    // Prepare filters\n    filterArr.forEach(function(filter, findex, farr) {\n        var value = filter['value'];\n        if(value instanceof jQuery) {\n            value = value.val();\n        }\n        if(!filter['matchCase']) {\n            value = value.toLowerCase();\n        }\n        filter['_value'] = value;\n    });\n    \n    // Filter data\n    data.forEach(function(val, index, arr) {   \n        var match = true;\n\n        filterArr.forEach(function(fval, findex, farr) {\n\n            // Apply defaults\n            var filter = $.extend({}, filterDefaults, fval);\n\n            // Value to test            \n            var testValArr;\n            var attr = fval['attribute'];\n            if(attr.indexOf(',') < 0) {\n                // Single attribute\n                attr = attr.trim();\n                testValArr = [filter['matchCase'] ? val[attr] : val[attr].toLowerCase()];\n            } else {\n                // Multiple attributes\n                testValArr = [];\n                attr.split(',').forEach(function(attrName, attrIndex, attrArr) {\n                    attrName = attrName.trim();\n                    testValArr.push(filter['matchCase'] ? val[attrName] : val[attrName].toLowerCase());\n                });\n            }\n\n            var thisMatch = false;\n            var type = filter['match'];\n            var filterval = filter['_value'];\n\n            // Retrieve actual value to match if this is a jquery object\n            if(filterval instanceof jQuery) {\n                filterval = filterval.val();\n            }\n\n            // Test each attribute\n            for(var i=0; i < testValArr.length; i++) {  \n                var testval = testValArr[i];\n                \n                if(type === 'contains') {   \n                    thisMatch = testval.indexOf(filterval) > -1;\n                } else \n                if(type === 'startsWith') {\n                    thisMatch = testval.indexOf(filterval) === 0;\n                } else\n                if(type === 'endsWith') {\n                    var expect = testval.length - filterval.length;\n                    if(testval.indexOf(filterval) === expect) {\n                        thisMatch = true;                                \n                    }\n                } else \n                if(type === 'exact') {\n                    thisMatch = filterval.length === 0 || testval === filterval;\n                } else\n                if(type === 'regex') {\n                    var regex = new RegExp(filterval);\n\n                    // Regex Modifiers\n                    var modifiers = 'g';\n                    if(!filter['matchCase']) {\n                        modifiers += 'i';\n                    }      \n\n                    if(testval.match(regex) != null) {\n                        thisMatch = true;\n                    }\n                }\n            }\n\n            match &= thisMatch;\n\n        });\n\n        if(match) {\n            filtered.push(val);                \n            val['__index'] = index; // store original index\n        }                    \n    });  \n    \n    return filtered;\n}\n\n})(jQuery);"],"sourceRoot":"/source/"}