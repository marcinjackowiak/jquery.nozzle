{"version":3,"sources":["jquery.nozzle.js"],"names":["$","nozzle","renderTimeoutFunction","liveFilter","options","this","defaults","data","deferRender","deferRenderDelay","filters","filterCallback","render","renderCallback","params","extend","forEach","fval","findex","farr","$el","is","on","e","filter","filteredData","filterData","id","setTimeout","filtered","performance","now","filterDefaults","attribute","match","matchCase","value","filterArr","isArray","push","jQuery","val","toLowerCase","index","arr","testval","thisMatch","type","filterval","indexOf","expect","length","regex","RegExp","modifiers"],"mappings":"AASAA,EAAAC,UACAD,EAAAC,OAAAC,sBAAA,KAMAF,EAAAC,OAAAE,WAAA,SAAAC,GAEA,GAAAD,GAAAE,KACAC,GACAC,KAAA,KACAC,aAAA,EACAC,iBAAA,IACAC,WACAC,eAAA,KACAC,QAAA,EACAC,eAAA,MAIAC,EAAAd,EAAAe,UAAAT,EAAAF,EAGAU,GAAAJ,QAAAM,QAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAH,EAAA,KACAG,GAAAC,GAAA,UACAD,EAAAE,GAAA,SAAA,SAAAC,GACApB,EAAAqB,WAGAJ,EAAAE,GAAA,QAAA,SAAAC,GACApB,EAAAqB,aAKArB,EAAAqB,OAAA,WACA,GAAAC,GAAAzB,EAAAC,OAAAyB,WACAZ,EAAAP,KACAO,EAAAJ,QAKA,IAHA,kBAAAI,GAAAH,gBACAG,EAAAH,eAAAc,GAEAX,EAAAF,QAAA,kBAAAE,GAAAD,eACA,GAAAC,EAAAN,YAAA,CACA,GAAAmB,GAAAC,WAAA,WACA5B,EAAAC,OAAAC,wBAAAyB,GACAb,EAAAD,eAAAY,IAEAX,EAAAL,iBACAT,GAAAC,OAAAC,sBAAAyB,MAEAb,GAAAD,eAAAY,KAWAzB,EAAAC,OAAAyB,WAAA,SAAAnB,EAAAG,GACA,GAEAmB,IAFAC,YAAAC,UAGAC,GACAC,UAAA,KACAC,MAAA,WACAC,WAAA,EACAC,MAAA,MAGAC,IACArC,GAAAsC,QAAA5B,GACA2B,EAAA3B,EAEA2B,EAAAE,KAAA7B,GAIA2B,EAAArB,QAAA,SAAAQ,EAAAN,EAAAC,GACA,GAAAiB,GAAAZ,EAAA,KACAY,aAAAI,UACAJ,EAAAA,EAAAK,OAEAjB,EAAA,YACAY,EAAAA,EAAAM,eAEAlB,EAAA,OAAAY,IAIA7B,EAAAS,QAAA,SAAAyB,EAAAE,EAAAC,GACA,GAAAV,IAAA,CAEAG,GAAArB,QAAA,SAAAC,EAAAC,EAAAC,GAGA,GAAAK,GAAAxB,EAAAe,UAAAiB,EAAAf,GAGA4B,EAAAJ,EAAAxB,EAAA,UACAO,GAAA,YACAqB,EAAAA,EAAAH,cAGA,IAAAI,IAAA,EAEAC,EAAAvB,EAAA,MACAwB,EAAAxB,EAAA,MAOA,IAJAwB,YAAAR,UACAQ,EAAAA,EAAAP,OAGA,aAAAM,EACAD,EAAAD,EAAAI,QAAAD,IAAA,MAEA,IAAA,eAAAD,EACAD,EAAA,IAAAD,EAAAI,QAAAD,OAEA,IAAA,aAAAD,EAAA,CACA,GAAAG,GAAAL,EAAAM,OAAAH,EAAAG,MACAN,GAAAI,QAAAD,KAAAE,IACAJ,GAAA,OAGA,IAAA,UAAAC,EACAD,EAAA,GAAAE,EAAAG,QAAAN,IAAAG,MAEA,IAAA,UAAAD,EAAA,CACA,GAAAK,GAAA,GAAAC,QAAAL,GAGAM,EAAA,GACA9B,GAAA,YACA8B,GAAA,KAGA,MAAAT,EAAAX,MAAAkB,KACAN,GAAA,GAIAZ,GAAAY,IAIAZ,IACAL,EAAAU,KAAAE,GACAA,EAAA,OAAAE,IAIAb,aAAAC,KAEA,OAAAF","file":"jquery.nozzle.min.js","sourcesContent":["/* \n * jquery.nozzle \n * Simple data filtering and manipulation library for jquery. \n * \n * Author: Marcin Jackowiak\n * Released under MIT License\n * \n */\n\n$.nozzle = {};\n$.nozzle.renderTimeoutFunction = null; \n\n/*\n * liveFilter\n * Apply a filter to the given dataset. Event listeners will be added automatically.\n */\n$.nozzle.liveFilter = function(options) {\n    \n    var liveFilter = this;        \n    var defaults = {        \n        data: null,\n        deferRender: true,\n        deferRenderDelay: 300,\n        filters: [],\n        filterCallback: null,\n        render: false,\n        renderCallback: null\n    }        \n    \n    // Apply default options\n    var params = $.extend({}, defaults, options);    \n        \n    // Register event listeners\n    params.filters.forEach(function(fval, findex, farr) {\n        var $el = fval['value'];\n        if($el.is('select')) {\n            $el.on('change', function(e) {\n                liveFilter.filter();\n            });\n        } else {\n            $el.on('keyup', function(e) {\n                liveFilter.filter();\n            });            \n        }\n    });\n    \n    liveFilter.filter = function() {\n        var filteredData = $.nozzle.filterData(\n            params.data,\n            params.filters\n        );\n        if(typeof params.filterCallback === 'function') {\n            params.filterCallback(filteredData);\n        }\n        if(params.render && typeof params.renderCallback === 'function') {\n            if(params.deferRender) {\n                var id = setTimeout(function() {\n                    if($.nozzle.renderTimeoutFunction === id) {\n                        params.renderCallback(filteredData);\n                    }\n                }, params.deferRenderDelay);            \n                $.nozzle.renderTimeoutFunction = id;\n            } else {\n                params.renderCallback(filteredData);\n            }\n        }\n    }\n    \n};\n\n/*\n * filterData\n * Filter the data using provided filter array\n */\n$.nozzle.filterData = function(data, filters) {\n    var t0 = performance.now();\n\n    var filtered = [];\n    var filterDefaults = {\n        attribute: null,\n        match: 'contains', // contains, startsWith, endsWith, regex, exact\n        matchCase: false,\n        value: null\n    }\n       \n    var filterArr = [];\n    if($.isArray(filters)) {\n        filterArr = filters;\n    } else {\n        filterArr.push(filters);\n    }                \n    \n    // Prepare filters\n    filterArr.forEach(function(filter, findex, farr) {\n        var value = filter['value'];\n        if(value instanceof jQuery) {\n            value = value.val();\n        }\n        if(!filter['matchCase']) {\n            value = value.toLowerCase();\n        }\n        filter['_value'] = value;\n    });\n    \n    // Filter data\n    data.forEach(function(val, index, arr) {   \n        var match = true;\n\n        filterArr.forEach(function(fval, findex, farr) {\n\n            // Apply defaults\n            var filter = $.extend({}, filterDefaults, fval);\n\n            // Value to test\n            var testval = val[fval['attribute']];\n            if(!filter['matchCase']) {\n                testval = testval.toLowerCase();\n            }\n\n            var thisMatch = false;\n\n            var type = filter['match'];\n            var filterval = filter['_value'];\n\n            // Retrieve actual value to match if this is a jquery object\n            if(filterval instanceof jQuery) {\n                filterval = filterval.val();\n            }\n            \n            if(type === 'contains') {   \n                thisMatch = testval.indexOf(filterval) > -1;\n            } else \n            if(type === 'startsWith') {\n                thisMatch = testval.indexOf(filterval) === 0;\n            } else\n            if(type === 'endsWith') {\n                var expect = testval.length - filterval.length;\n                if(testval.indexOf(filterval) === expect) {\n                    thisMatch = true;                                \n                }\n            } else \n            if(type === 'exact') {\n                thisMatch = filterval.length == 0 || testval === filterval;\n            } else\n            if(type === 'regex') {\n                var regex = new RegExp(filterval);\n\n                // Regex Modifiers\n                var modifiers = 'g';\n                if(!filter['matchCase']) {\n                    modifiers += 'i';\n                }      \n\n                if(testval.match(regex) != null) {\n                    thisMatch = true;\n                }\n            }\n\n            match &= thisMatch;\n\n        });\n\n        if(match) {\n            filtered.push(val);                \n            val['_index'] = index; // store original index\n        }                    \n    });  \n    \n    var t1 = performance.now();\n    console.log('Filter took '+(t1-t0) + \"ms\");    \n    return filtered;\n}"],"sourceRoot":"/source/"}