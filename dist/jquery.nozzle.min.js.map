{"version":3,"sources":["jquery.nozzle.js"],"names":["$","nozzle","version","renderTimeoutFunction","liveFilter","options","this","defaults","data","deferRender","deferRenderDelay","filters","filterCallback","render","renderCallback","params","extend","forEach","fval","findex","farr","$el","is","on","e","filter","filteredData","filterData","id","setTimeout","filtered","filterDefaults","attribute","match","matchCase","value","filterArr","isArray","push","jQuery","val","toLowerCase","index","arr","testValArr","skip","attr","indexOf","trim","split","attrName","attrIndex","attrArr","length","type","filterval","thisMatch","i","testval","expect","regex","RegExp","modifiers","Model","Object","defineProperty","enumerable","writable","get","_data","set","_bindings","binding","idx","unbind","apply","addBinding","bind","Binding","source","model","map","Watchable","name","initValue","parent","$listeners","updateValue","notifyListeners","$source","self","$listener","each","$this","addListener","watch","watchObj","_watchObj","keys","tmp","watchable","objFromPath","path","obj","pathArr","el","changeCallback","off"],"mappings":"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","file":"jquery.nozzle.min.js","sourcesContent":["/* \n * jquery.nozzle \n * v1.0.0\n * Simple data filtering and manipulation library for jquery. \n * \n * Author: Marcin Jackowiak\n * Released under MIT License\n * \n */\n\n(function($) {\n    \n$.nozzle = {};\n$.nozzle.version = '1.0.0'\n$.nozzle.renderTimeoutFunction = null; \n\n/*\n * liveFilter\n * Apply a filter to the given dataset. Event listeners will be added automatically.\n */\n$.nozzle.liveFilter = function(options) {\n    \n    var liveFilter = this;        \n    var defaults = {        \n        data: null,\n        deferRender: true,\n        deferRenderDelay: 300,\n        filters: [],\n        filterCallback: null,\n        render: false,\n        renderCallback: null\n    }        \n    \n    // Apply default options\n    var params = $.extend({}, defaults, options);    \n        \n    // Register event listeners\n    params.filters.forEach(function(fval, findex, farr) {\n        var $el = fval['value'];\n        if($el.is('select')) {\n            $el.on('change', function(e) {\n                liveFilter.filter();\n            });\n        } else {\n            $el.on('keyup', function(e) {\n                liveFilter.filter();\n            });            \n        }\n    });\n    \n    liveFilter.filter = function() {\n        var filteredData = $.nozzle.filterData(\n            params.data,\n            params.filters\n        );\n        if(typeof params.filterCallback === 'function') {\n            params.filterCallback(filteredData);\n        }\n        if(params.render && typeof params.renderCallback === 'function') {\n            if(params.deferRender) {\n                var id = setTimeout(function() {\n                    if($.nozzle.renderTimeoutFunction === id) {\n                        params.renderCallback(filteredData);\n                    }\n                }, params.deferRenderDelay);            \n                $.nozzle.renderTimeoutFunction = id;\n            } else {\n                params.renderCallback(filteredData);\n            }\n        }\n    }\n    \n};\n\n/*\n * filterData\n * Filter the data using provided filter array\n */\n$.nozzle.filterData = function(data, filters) {\n    var filtered = [];\n    var filterDefaults = {\n        attribute: null, // can be a comma separated list\n        match: 'contains', // contains, startsWith, endsWith, regex, exact\n        matchCase: false,\n        value: null\n    }\n       \n    var filterArr = [];\n    if($.isArray(filters)) {\n        filterArr = filters;\n    } else {\n        filterArr.push(filters);\n    }                \n    \n    // Prepare filters\n    filterArr.forEach(function(filter, findex, farr) {\n        var value = filter['value'];\n        if(value instanceof jQuery) {\n            value = value.val();\n        }\n        if(!filter['matchCase']) {\n            value = value.toLowerCase();\n        }\n        filter['_value'] = value;\n    });\n    \n    // Filter data\n    data.forEach(function(val, index, arr) {   \n        var match = true;\n\n        filterArr.forEach(function(fval, findex, farr) {\n           \n            var skip = false;\n\n            // Apply defaults\n            var filter = $.extend({}, filterDefaults, fval);\n\n            // Value to test            \n            var testValArr;\n            var attr = fval['attribute'];\n            if(attr.indexOf(',') < 0) {\n                // Single attribute\n                attr = attr.trim();\n                if(typeof val[attr] === 'undefined') {\n                    skip = true;\n                } else {\n                    testValArr = [filter['matchCase'] ? val[attr] : val[attr].toLowerCase()];\n                }\n            } else {\n                // Multiple attributes\n                testValArr = [];\n                attr.split(',').forEach(function(attrName, attrIndex, attrArr) {\n                    attrName = attrName.trim();\n                    if(typeof val[attrName] !== 'undefined') {\n                        testValArr.push(filter['matchCase'] ? val[attrName] : val[attrName].toLowerCase());\n                    }\n                });\n                if(testValArr.length === 0) skip = true; // continue to next forEach\n            }\n\n            if(skip) {\n                \n                match = false;\n                \n            } else {\n                var type = filter['match'];\n                var filterval = filter['_value'];\n\n                // Retrieve actual value to match if this is a jquery object\n                if(filterval instanceof jQuery) {\n                    filterval = filterval.val();\n                }\n\n                // Test each attribute\n                var thisMatch = false;\n                for(var i=0; i < testValArr.length; i++) {                     \n                    var testval = testValArr[i];\n\n                    if(type === 'contains') {   \n                        thisMatch = testval.indexOf(filterval) > -1;\n                    } else \n                    if(type === 'startsWith') {\n                        thisMatch = testval.indexOf(filterval) === 0;                        \n                    } else\n                    if(type === 'endsWith') {\n                        var expect = testval.length - filterval.length;\n                        if(testval.indexOf(filterval) === expect) {\n                            thisMatch = true;                                \n                        }\n                    } else \n                    if(type === 'exact') {\n                        thisMatch = filterval.length === 0 || testval === filterval;\n                    } else\n                    if(type === 'regex') {\n                        var regex = new RegExp(filterval);\n\n                        // Regex Modifiers\n                        var modifiers = 'g';\n                        if(!filter['matchCase']) {\n                            modifiers += 'i';\n                        }      \n\n                        if(testval.match(regex) != null) {\n                            thisMatch = true;\n                        }\n                    }\n                    \n                    if(thisMatch) break; // break out on first match\n                }\n                \n                match &= thisMatch;\n                \n            }\n\n        });\n\n        if(match) {\n            filtered.push(val);                \n            val['__index'] = index; // store original index\n        }                    \n    });  \n    \n    return filtered;\n};\n\n$.nozzle.Model = function(data) {\n    Object.defineProperty(this, '_data', { \n        enumerable: false,\n        writable: true\n    });   \n    Object.defineProperty(this, '_bindings', { \n        enumerable: false,\n        writable: true\n    });       \n    Object.defineProperty(this, 'data', {\n        get: function() {\n            return this._data;\n        },\n        set: function(val) {            \n            this._data = val;\n            this._bindings.forEach(function(binding, idx) {\n                console.log('Rebinding');\n                binding.unbind();\n                binding.apply('data'); // rebind\n            });                        \n        }\n    });\n    this._bindings = [];\n    this.data = data;\n    \n    this.addBinding = function(binding) {\n        this._bindings.push(binding);\n    }\n};\n\n$.nozzle.bind = function(options) {\n    var binding = new $.nozzle.Binding(options);\n    if(typeof options.source !== 'undefined') {\n        binding.apply(options.source);\n    } else {\n        binding.apply();\n    }\n};\n\n$.nozzle.Binding = function(options) {\n    \n    var defaults = {        \n        model: null,\n        source: null,\n        map: {\n        }\n    }        \n    \n    // Apply default options\n    var params = $.extend({}, defaults, options); \n    this.params = params;\n    \n    // Store binding reference\n    this.params.model.addBinding(this);\n    \n    var Watchable = function(name, initValue, parent) {\n        Object.defineProperty(this, 'name', { \n            enumerable: false,\n            writable: true\n        });   \n        Object.defineProperty(this, 'value', { \n            enumerable: false,\n            writable: true\n        });      \n        Object.defineProperty(this, '$listeners', { \n            enumerable: false,\n            writable: true\n        });              \n        Object.defineProperty(this, 'attribute', { \n            enumerable: false,\n            writable: true\n        });   \n        Object.defineProperty(this, 'parent', { \n            enumerable: false,\n            writable: true\n        });          \n        this.name = '_'+name;\n        this.value = initValue;\n        this.attribute = name; \n        this.parent = parent;\n        this.$listeners = [];\n        \n        this.updateValue = function(value) {            \n            this.value = value;\n        }\n        \n        this.notifyListeners = function($source) {\n            var self = this;\n            this.$listeners.forEach(function($listener, idx, arr) {\n                $listener.each(function() {\n                    var $this = $(this);\n                    if(typeof $source === 'undefined' || $source === null || $this.get(0) !== $source.get(0)) {\n                        $this.val(self.value);\n                    }                    \n                });\n            });\n        }\n        \n        this.addListener = function($el) {\n            this.$listeners.push($el);\n        }\n    }\n    \n    var watch = function(watchObj, _watchObj) {\n        \n        Object.keys(watchObj).forEach(function(attr, idx, arr) {  \n            \n            var tmp = watchObj[attr];\n            Object.defineProperty(watchObj, '_'+attr, {\n                enumerable: false,\n                value: new Watchable(attr, tmp, watchObj)\n            });\n            Object.defineProperty(watchObj, attr, {\n                get: function() {                                \n                    return this['_'+attr].value;\n                },\n                set: function(val) { \n                    var watchable = watchObj['_'+attr];\n                    var old = watchable.value;\n                    console.log('Changing ' + attr + ' from: ' + old +  ' to: ' + val);\n                    watchable.value = val;\n                    watchable.notifyListeners();\n                }\n            });\n            \n            if(typeof watchObj[attr] === 'object') {\n                watch(watchObj[attr], watchObj['_'+attr]);\n            }            \n        });        \n    };\n\n    var objFromPath = function(path) {\n        var obj = params.model.data;\n        var pathArr = path.split('.');\n        pathArr.forEach(function(attr, idx, arr) {\n            if(idx === arr.length - 1) {\n                attr = '_'+attr; // watchable\n            }\n            obj = obj[attr];\n        });\n        return obj;\n    };   \n    \n    this.apply = function(source) {\n        watch(params.model.data);\n        \n        Object.keys(params.map).forEach(function(el, idx, arr) {\n            var path = params.map[el].path;\n            var changeCallback = params.map[el].changeCallback;\n            console.log('Binding element='+el+', path='+path);\n            var watchable = objFromPath(path);\n            watchable.addListener($(el));\n            $(el).on('keyup.nozzle.bind', function(e) {        \n                console.log('Keyup event on \"'+el+'\"');\n                watchable.updateValue($(this).val());\n                watchable.notifyListeners($(el));\n                if(typeof changeCallback === 'function') {\n                    changeCallback();\n                }\n            });           \n            \n            if(source === 'data') {\n                // Update the UI from data\n                watchable.notifyListeners(null);\n            } else\n            if(source === 'ui') {\n                // Update the data from UI\n                watchable.updateValue($(el).val());\n            }\n            \n        });  \n    };\n    \n    this.unbind = function() {\n        Object.keys(params.map).forEach(function(el, idx, arr) {\n            $(el).off('keyup.nozzle.bind');\n        });\n    }\n    \n};\n\n})(jQuery);"],"sourceRoot":"/source/"}